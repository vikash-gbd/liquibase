name: Deploy to Snowflake

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Download Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.zip -o liquibase.zip
          unzip -q liquibase.zip -d liquibase-cli
          chmod +x liquibase-cli/liquibase

      - name: Run per-table dry run + sync (new or changed only)
        env:
          SF_ACCOUNT:   ${{ secrets.SF_ACCOUNT }}
          SF_DATABASE:  ${{ secrets.SF_DATABASE }}
          SF_SCHEMA:    ${{ secrets.SF_SCHEMA }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_ROLE:      ${{ secrets.SF_ROLE }}
          SF_USER:      ${{ secrets.SF_USER }}
          SF_PASSWORD:  ${{ secrets.SF_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          mkdir -p liquibase/tmp

          URL="jdbc:snowflake://${SF_ACCOUNT}.snowflakecomputing.com/?db=${SF_DATABASE}&schema=${SF_SCHEMA}&warehouse=${SF_WAREHOUSE}&role=${SF_ROLE}"

          find ddl -type f -path "*/table/*.sql" | while read sql_file; do
            done_file="${sql_file}.done"
            current_hash=$(sha256sum "$sql_file" | awk '{print $1}')

            if [ ! -f "$done_file" ]; then
              echo "üìÑ First time processing $sql_file"
              process="yes"
            else
              stored_hash=$(grep HASH= "$done_file" | cut -d'=' -f2)
              if [ "$stored_hash" != "$current_hash" ]; then
                echo "‚úèÔ∏è  SQL file changed: $sql_file"
                process="yes"
              else
                echo "‚úÖ Skipping unchanged: $sql_file"
                process="no"
              fi
            fi

            if [ "$process" = "yes" ]; then
              changelog_path="liquibase/tmp/single-temp.xml"
              cat <<EOF > $changelog_path
<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.24.xsd">
  <changeSet id="$(date +%s)-$RANDOM" author="auto">
    <sqlFile path="$sql_file" relativeToChangelogFile="false" splitStatements="true" stripComments="true"/>
  </changeSet>
</databaseChangeLog>
EOF

              echo "üß™ Dry-run: $sql_file"
              liquibase-cli/liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changeLogFile="$changelog_path" \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                updateSql

              echo "‚úÖ Sync changelog: $sql_file"
              liquibase-cli/liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changeLogFile="$changelog_path" \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                changelogSync

              echo "HASH=$current_hash" > "$done_file"
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add "$done_file"
              git commit -m "chore: mark processed $sql_file"
              git push origin main
              echo "‚úîÔ∏è  Marked as processed: $sql_file"
            fi
          done
