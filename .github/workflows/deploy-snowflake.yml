name: Deploy to Snowflake

on:
  push:
    branches: [ main ]

permissions:
  contents: write  # allow GitHub Actions bot to push

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Download Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.zip -o liquibase.zip
          unzip -q liquibase.zip -d liquibase-cli
          chmod +x liquibase-cli/liquibase

      - name: Deploy to Snowflake
        env:
          SF_ACCOUNT:   ${{ secrets.SF_ACCOUNT }}
          SF_USER:      ${{ secrets.SF_USER }}
          SF_PASSWORD:  ${{ secrets.SF_PASSWORD }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_ROLE:      ${{ secrets.SF_ROLE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîß Starting deployment..."

          # Find all .sql files under ddl/
          find ddl -type f -name "*.sql" | while read sql_file; do
            echo "üìÇ Processing: $sql_file"

            # Extract components from path
            DB_NAME=$(echo "$sql_file" | cut -d'/' -f2)
            SCHEMA_NAME=$(echo "$sql_file" | cut -d'/' -f3)
            TABLE_NAME=$(basename "$sql_file")
            MARKER_FILE="ddl/${DB_NAME}/${SCHEMA_NAME}/table/.first_run_done/${TABLE_NAME}.done"

            echo "üîç DB: $DB_NAME | SCHEMA: $SCHEMA_NAME | TABLE: $TABLE_NAME"
            echo "üß≠ Marker: $MARKER_FILE"

            URL="jdbc:snowflake://${SF_ACCOUNT}.snowflakecomputing.com/?db=${DB_NAME}&schema=${SCHEMA_NAME}&warehouse=${SF_WAREHOUSE}&role=${SF_ROLE}"

            if [ ! -f "$MARKER_FILE" ]; then
              echo "üß™ FIRST RUN for $TABLE_NAME ‚Äî Dry-run + changelogSync"

              liquibase-cli/liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changelog-file=liquibase/changelog/liquibase-master.xml \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                updateSql > dryrun_${TABLE_NAME}.sql

              liquibase-cli/liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changelog-file=liquibase/changelog/liquibase-master.xml \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                changelogSync

              mkdir -p "$(dirname "$MARKER_FILE")"
              touch "$MARKER_FILE"
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add "$MARKER_FILE"
              git commit -m "chore: mark first run for $TABLE_NAME"
              git push origin main
              echo "‚úÖ $TABLE_NAME dry-run complete."
            else
              echo "üîÅ Subsequent run ‚Äî apply real changes for $TABLE_NAME"

              liquibase-cli/liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changelog-file=liquibase/changelog/liquibase-master.xml \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                clearCheckSums

              liquibase-cli/liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changelog-file=liquibase/changelog/liquibase-master.xml \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                update

              echo "‚úÖ Changes applied for $TABLE_NAME"
            fi

          done
