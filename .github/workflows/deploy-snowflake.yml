name: Deploy to Snowflake

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SNOWFLAKE_USERNAME: ${{ secrets.SF_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SF_SCHEMA }}
      LIQUIBASE_PROPS_FILE: ./liquibase.properties

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.zip -o liquibase.zip
          unzip -q liquibase.zip -d liquibase-cli
          chmod +x liquibase-cli/liquibase

      - name: Create .first_run_done if not exists
        run: |
          if [ ! -f .first_run_done ]; then
            echo "First run: generating dry-run SQL and marking changelogs as synced"
            liquibase-cli/liquibase updateSql
            liquibase-cli/liquibase changelogSync
            touch .first_run_done
          else
            echo "Subsequent run: applying changes"
            liquibase-cli/liquibase update
          fi
