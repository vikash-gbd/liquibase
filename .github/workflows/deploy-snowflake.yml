name: Deploy to Snowflake

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SNOWFLAKE_USERNAME: ${{ secrets.SF_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.zip -o liquibase.zip
          unzip -q liquibase.zip -d liquibase-cli
          chmod +x liquibase-cli/liquibase

      - name: Set up marker
        id: marker
        run: |
          if [ -f ddl/sales_db/customer_schema/table/.first_run_done ]; then
            echo "first_run=false" >> $GITHUB_OUTPUT
          else
            echo "first_run=true" >> $GITHUB_OUTPUT
          fi

      - name: Dry-run (first time only)
        if: steps.marker.outputs.first_run == 'true'
        run: |
          ./liquibase-cli/liquibase \
            --defaultsFile=liquibase.properties \
            --changeLogFile=liquibase/changelog/liquibase-master.xml \
            updateSql > dryrun_output.sql
          ./liquibase-cli/liquibase \
            --defaultsFile=liquibase.properties \
            --changeLogFile=liquibase/changelog/liquibase-master.xml \
            changelogSync
          mkdir -p ddl/sales_db/customer_schema/table/.first_run_done
          touch ddl/sales_db/customer_schema/table/.first_run_done/customer_table.sql.done

      - name: Real deployment (next runs)
        if: steps.marker.outputs.first_run == 'false'
        run: |
          ./liquibase-cli/liquibase \
            --defaultsFile=liquibase.properties \
            --changeLogFile=liquibase/changelog/liquibase-master.xml \
            update
