name: Deploy to Snowflake

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      LIQUIBASE_PROPS_FILE: ./liquibase.properties
      SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SF_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SF_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: ☕ Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Download Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          mkdir -p liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli --strip-components=1
          chmod +x liquibase-cli/liquibase

      - name: 🔍 Check if first run
        id: check_first_run
        run: |
          if [ -f .first_run_done ]; then
            echo "first_run=false" >> $GITHUB_ENV
          else
            echo "first_run=true" >> $GITHUB_ENV
          fi

      - name: 🧪 Run dry-run SQL (first run only)
        if: env.first_run == 'true'
        run: |
          echo "🔧 Running dry-run (updateSql)..."
          liquibase-cli/liquibase \
            updateSql \
            --logLevel=info

      - name: ✅ Mark first run done & sync
        if: env.first_run == 'true'
        run: |
          echo "📌 Marking changelog as synced..."
          liquibase-cli/liquibase changelogSync --logLevel=info
          touch .first_run_done
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          mkdir -p ddl/sales_db/customer_schema/table/.first_run_done
          touch ddl/sales_db/customer_schema/table/.first_run_done/customer_table.sql.done
          git add .first_run_done ddl/**/.first_run_done/*.done || true
          git commit -m "✅ Mark first run done [skip ci]" || true
          git push https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} HEAD:main || true

      - name: 🚀 Apply changes (subsequent runs only)
        if: env.first_run == 'false'
        run: |
          echo "🔁 Running Liquibase update..."
          liquibase-cli/liquibase clearCheckSums
          liquibase-cli/liquibase \
            update \
            --logLevel=info
