name: Deploy to Snowflake

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Download Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.zip -o liquibase.zip
          mkdir -p liquibase-cli
          unzip -q liquibase.zip -d liquibase-cli
          chmod +x liquibase-cli/liquibase

      - name: Verify Liquibase version
        run: liquibase-cli/liquibase --version

      - name: Deploy to Snowflake
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SF_SCHEMA: ${{ secrets.SF_SCHEMA }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: |
          if [ -z "$SF_ACCOUNT" ]; then
            echo "❌ ERROR: SF_ACCOUNT secret missing!"
            exit 1
          fi

          URL="jdbc:snowflake://${SF_ACCOUNT}.snowflakecomputing.com/?db=${SF_DATABASE}&schema=${SF_SCHEMA}&warehouse=${SF_WAREHOUSE}&role=${SF_ROLE}"
          echo "🔗 Connecting to $URL"

          # Backslash-escape password to preserve special characters ($, !, & etc.)
          ESC_PASSWORD=$(printf '%q' "$SF_PASSWORD")
          echo "🔐 Password escaped"

          LB="liquibase-cli/liquibase \
            --changelog-file=changelog/liquibase-master.xml \
            --url=\"$URL\" \
            --username='$SF_USER' \
            --password='$ESC_PASSWORD' \
            --driver=net.snowflake.client.jdbc.SnowflakeDriver"

          echo "🔧 Testing connection"
          eval "$LB status" || { echo "❌ Connection failed"; exit 1; }

          if [ "${{ github.run_number }}" = "1" ]; then
            echo "🧪 Dry-run"
            eval "$LB updateSql" > dry-run-output.sql
            echo "🔁 Syncing changelog"
            eval "$LB changelogSync"
          else
            echo "🚀 Running update"
            eval "$LB update"
          fi
