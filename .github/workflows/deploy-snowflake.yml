name: Deploy to Snowflake

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SF_ACCOUNT:   ${{ secrets.SF_ACCOUNT }}
      SF_DATABASE:  ${{ secrets.SF_DATABASE }}
      SF_SCHEMA:    ${{ secrets.SF_SCHEMA }}
      SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
      SF_ROLE:      ${{ secrets.SF_ROLE }}
      SF_USER:      ${{ secrets.SF_USER }}
      SF_PASSWORD:  ${{ secrets.SF_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Download Liquibase CLI
        run: |
          # 1) Download the tarball
          curl -sL \
            https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz \
            -o liquibase.tar.gz

          # 2) Prepare install dir
          mkdir -p liquibase-cli

          # 3) Extract into liquibase-cli, strip top-level folder
          tar -xzf liquibase.tar.gz -C liquibase-cli --strip-components=1

          # 4) Make the binary executable
          chmod +x liquibase-cli/liquibase

      - name: Deploy to Snowflake
        run: |
          echo "ðŸ”§ Starting deployment"

          # Add liquibase-cli to PATH
          export PATH="$PWD/liquibase-cli:$PATH"

          URL="jdbc:snowflake://${SF_ACCOUNT}.snowflakecomputing.com/?warehouse=${SF_WAREHOUSE}&role=${SF_ROLE}"

          mkdir -p .first_run_done 2>/dev/null || true

          # Dryâ€‘run & sync each new SQL file
          while IFS= read -r sql; do
            marker=".first_run_done/${sql}.done"
            if [ ! -f "$marker" ]; then
              echo "ðŸ§ª Dry-run & sync for $sql"
              liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changelog-file=liquibase/changelog/liquibase-master.xml \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                updateSql > dry-run-${sql//\//_}.sql

              liquibase \
                --url="$URL" \
                --username="$SF_USER" \
                --password="$SF_PASSWORD" \
                --changelog-file=liquibase/changelog/liquibase-master.xml \
                --driver=net.snowflake.client.jdbc.SnowflakeDriver \
                changelogSync

              touch "$marker"
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add "$marker"
              git commit -m "chore: mark $sql as dry-run completed"
              git push origin main

              echo "âœ… Done. Exiting so you can review dry-run."
              exit 0
            fi
          done < <(find ddl -name "*.sql" | sort)

          # All files have been dryâ€‘run once, now apply real updates
          echo "ðŸ§¹ Clearing checksums"
          liquibase \
            --url="$URL" \
            --username="$SF_USER" \
            --password="$SF_PASSWORD" \
            --changelog-file=liquibase/changelog/liquibase-master.xml \
            --driver=net.snowflake.client.jdbc.SnowflakeDriver \
            clearCheckSums

          echo "ðŸš€ Executing real update"
          liquibase \
            --url="$URL" \
            --username="$SF_USER" \
            --password="$SF_PASSWORD" \
            --changelog-file=liquibase/changelog/liquibase-master.xml \
            --driver=net.snowflake.client.jdbc.SnowflakeDriver \
            update
